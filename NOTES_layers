~~~~~~~~~~~~~~~~~~~~~~~~~~~LAYERS_PKG~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

BUILD:
1) Edit LAYERS_SIZE.h in code dir
   N_Layers =50
2) Edit DIAGNOSTICS_SIZE.h in code dir
   Max diagnostics req are 500+ 
3) Edit packages.conf
   add in layers and diagnostics
4) make CLEAN
5) copy in the SIZE.h files
6) IRDIS4 options
   genmake2 --mpi --enable=layers --enable=diagnostics --optfile=../linux_iridis4
   genmake2 --mpi --enable=layers --enable=diagnostics --optfile=../linux_iridis4_nc4
   genmake2 --mpi --enable=layers --enable=diagnostics --optfile=../linux_iridis4_nc4_opt
   NAUTILUS
   genmake2 --mpi --enable=layers --enable=diagnostics --optfile=../linux_AltixMPT
   genmake2 --mpi --enable=layers --enable=diagnostics --optfile=../linux_AltixMPT_opt
   NOTE to keep build dir clean you have the otpion for example to add --modsq=../code
7) make depend
8) make
9) rename executable and transfer to work space

SETUP:
~~~~~~~~~data.pkg~~~~~~~~ 
# Packages
 &PACKAGES
 useMNC=.TRUE.,
 useOBCS=.FALSE.,
 usePtracers=.FALSE.,
 useRBCS=.FALSE.,
 useLayers=.TRUE.,
 useDiagnostics=.TRUE.,
 &

~~~~~~~~~data.diagnostics~~~~~~~~~~~~~~~~~~
The available_diagnostics.log is generated upon a sucessful diagnostics run - if you lose this see the manual for an example data.diagnostics file and run with that to generate list of diagnostics

Here the layer diagnostics are at the end of the file and are for the use of calculating the residual 
stream function

LaVH1RHO or LaVH1TH give the layer integrated transport

# Diagnostic Package Choices
#--------------------
#  dumpAtLast (logical): always write output at the end of simulation (default=F)
#  diag_mnc   (logical): write to NetCDF files (default=useMNC)
#--for each output-stream:
#  fileName(n) : prefix of the output file name (max 80c long) for outp.stream n
#  frequency(n):< 0 : write snap-shot output every |frequency| seconds
#               > 0 : write time-average output every frequency seconds
#  timePhase(n)     : write at time = timePhase + multiple of |frequency|
#    averagingFreq  : frequency (in s) for periodic averaging interval
#    averagingPhase : phase     (in s) for periodic averaging interval
#    repeatCycle    : number of averaging intervals in 1 cycle
#  levels(:,n) : list of levels to write to file (Notes: declared as REAL)
#                when this entry is missing, select all common levels of this list
#  fields(:,n) : list of selected diagnostics fields (8.c) in outp.stream n
#                (see "available_diagnostics.log" file for the full list of diags)
#  missing_value(n) : missing value for real-type fields in output file "n"
#  fileFlags(n)     : specific code (8c string) for output file "n"
#--------------------
&DIAGNOSTICS_LIST
   fields(1,1) = 'PsiVEL    ',
   levels(1:24,1) = 1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,
                   18.,19.,20.,21.,22.,23.,24.,
   filename(1)= 'Psioutput1',
#Yearly dumps
   frequency(1)=31104000.,
#    frequency(1) = 2592000.,
   fields(1:3,2) = 'LaVH1TH   ','LaHs1TH   ','LaVa1TH'
   levels(1:48,2) = 1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,
                   18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,
                   33.,34.,35.,36.,37.,38.,39.,40.,41.,42.,43.,44.,45.,46.,47.,
                   48.,
   filename(2) = 'Psioutput2',
#Yearly dumps
   frequency(2) = 31104000.,
#Monthly testing
#    frequency(2) = 2592000.,
##Heat Budget stuff
#   fields(1:7,3) = 'TOTTTEND','ADVy_TH','DFyE_TH','ADVx_TH','DFxE_TH',
#                   'ADVr_TH','DFrE_TH',
#   levels(1:24,3) = 1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,
#                   18.,19.,20.,21.,22.,23.,24.,
#   filename(3)= 'Heat_Budget',
##Yearly dumps
#   frequency(3)=31104000.,
##Monthly testing
##    frequency(3) = 2592000.,
&

&DIAG_STATIS_PARMS
&
#--------------------
# Parameter for Diagnostics of per level statistics:
#--------------------
# diagSt_mnc (logical): write stat-diags to NetCDF files (default=diag_mnc)
# diagSt_regMaskFile : file containing the region-mask to read-in
# nSetRegMskFile : number of region-mask sets within the region-mask file
# set_regMask(i) : region-mask set-index that identifies the region "i"
# val_regMask(i) : region "i" identifier value in the region mask
#--for each output-stream:
# stat_fName(n) : prefix of the output file name (max 80c long) for outp.stream n
# stat_freq(n):< 0 : write snap-shot output every |stat_freq| seconds
# > 0 : write time-average output every stat_freq seconds
# stat_phase(n) : write at time = stat_phase + multiple of |stat_freq|
# stat_region(:,n) : list of "regions" (default: 1 region only=global)
# stat_fields(:,n) : list of selected diagnostics fields (8.c) in outp.stream n
# (see "available_diagnostics.log" file for the full list of diags)
#--------------------


~~~~~~~~~~~~~~~~data.layers~~~~~~~~~~~~~~~~~~~~~~
For now using potential temperature layers is the best method. 
Dave munday suggests 0.25C steps

&LAYERS_PARM01
# 5 year averaging
  layers_taveFreq=155520000.00,
# no instantaneous output
#LAYER_nb=1 set to potential temp
  LAYER_nb=1,
  layers_diagFreq=0.,
  layers_G=0,2,4,6,8,10,12,14,15,16,17,18,19,19.5,20,
           20.5,21,21.5,22,22.25,22.5,22.75,23,23.25,
           23.5,23.75,24,24.25,24.5,24.75,25,25.25,25.5,
           25.75,26,26.25,26.5,26.75,27,27.25,27.5,27.75,
           28,28.25,28.5,28.75,29,29.25,29.5,29.75,30,
&

The first 16C are all at depths with basically no transpot so you could just have 0,16 and then step 
it up from here - this temp range is quite high!

The Density layers previously used are here: 
&LAYERS_PARM01
# 5 year averaging
  layers_taveFreq=155520000.00,
# no instantaneous output
#LAYER_nb=3 sets layers to be in potential density
  LAYER_nb=3,
  layers_diagFreq=0.,
  layers_G=997.8,998,998.2,998.4,998.5,998.6,998.7,998.8,
           998.9,999,999.1,999.15,999.2,999.25,999.3,999.35,
           999.4,999.45,999.5,999.55,999.6,999.65,999.7,
           999.775,999.8,999.825,999.85,999.875,999.9,999.925,
           999.95,1000,1000.05,1000.1,1000.125,1000.15,1000.175,
           1000.2,1000.22,1000.23,1000.24,1000.25,1000.26,
           1000.27,1000.28,1000.29,1000.3,1000.31,1000.32,
           1000.33,1000.34,

MANIPULATION:

see ~/matlab scripts for manipulation

The output just needs to be zonally integrates and cumsumed up the water column
